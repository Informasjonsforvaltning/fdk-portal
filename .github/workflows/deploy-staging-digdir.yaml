name: Build and deploy to staging (digdir) when pull request is created

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_KEY }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: gcloud auth configure-docker

      - name: Build Docker image with GitHub commit sha tag
        run: docker build . -t eu.gcr.io/digdir-fdk-infra/fdk-portal:$GITHUB_SHA -t eu.gcr.io/digdir-fdk-infra/fdk-portal:staging_latest

      - name: Publish docker image to Google Cloud
        run: docker -- push eu.gcr.io/digdir-fdk-infra/fdk-portal

      - name: Apply Helm template
        uses: stefanprodan/kube-tools@v1
        with:
          helm: 2.14.3
          command: |
            helm init --client-only
            helm repo add fdk https://informasjonsforvaltning.github.io/helm-chart/
            helm fetch --untar --untardir ./helm fdk/fdk-portal
            helm template --set DOCKER_IMAGE_NAME="eu.gcr.io/digdir-fdk-infra/fdk-portal:$GITHUB_SHA" -f ./helm/fdk-portal/values/staging-digdir.yaml ./helm/fdk-portal/ > ./kubectlapply.yaml
            chmod o+w ./kubectlapply.yaml
            cat kubectlapply.yaml

      - name: Get kubeconfig file from GKE
        uses: machine-learning-apps/gke-kubeconfig@master
        with:
          application_credentials: ${{ secrets.DIGDIR_FDK_DEV_AUTODEPLOY }}
          project_id: digdir-fdk-dev
          location_zone: europe-north1-a
          cluster_name: digdir-fdk-dev

      - name: Deploy to staging
        uses: docker://bitnami/kubectl:latest
        env:
          KUBECONFIG: '/github/workspace/.kube/config'
        with:
          args: "apply -f ./kubectlapply.yaml --force"

      - name: Notify slack of deploy
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"C7NTH118T\",\"text\":\"Application: fdk-portal deployed to digdir-staging\"}'