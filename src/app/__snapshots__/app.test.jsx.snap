// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render App correctly 1`] = `
<div
  className="position-relative overflow-hidden theme-fdk"
>
  <Header
    onChangeLanguage={[Function]}
  />
  <Component />
  <Switch>
    <Redirect
      from="/:url*(/+)"
      to=""
    />
    <Route
      component={[Function]}
      exact={true}
      path="/"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/search-all"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/datasets"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/dataservices"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/concepts"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/informationmodels"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/public-services-and-events"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/news-archive"
    />
    <Route
      component={
        Object {
          "$$typeof": Symbol(react.memo),
          "compare": null,
          "type": [Function],
        }
      }
      exact={false}
      path="/organizations"
    />
    <withRouter(ScrollToTop)>
      <Switch>
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          exact={true}
          path="/concepts/compare"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "compare": null,
                "type": [Function],
              },
            }
          }
          exact={true}
          path="/datasets/:datasetId"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "compare": null,
                "type": Object {
                  "$$typeof": Symbol(react.memo),
                  "WrappedComponent": [Function],
                  "compare": null,
                  "type": [Function],
                },
              },
            }
          }
          exact={true}
          path="/concepts/:conceptId"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "compare": null,
                "type": Object {
                  "$$typeof": Symbol(react.memo),
                  "WrappedComponent": [Function],
                  "compare": null,
                  "type": [Function],
                },
              },
            }
          }
          exact={true}
          path="/informationmodels/:informationModelId"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "compare": null,
                "type": Object {
                  "$$typeof": Symbol(react.memo),
                  "WrappedComponent": [Function],
                  "compare": null,
                  "type": [Function],
                },
              },
            }
          }
          exact={true}
          path="/dataservices/:dataServiceId"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "compare": null,
                "type": [Function],
              },
            }
          }
          exact={true}
          path="/public-services-and-events/:publicServiceId"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "compare": null,
                "type": Object {
                  "$$typeof": Symbol(react.memo),
                  "WrappedComponent": [Function],
                  "compare": null,
                  "type": [Function],
                },
              },
            }
          }
          exact={true}
          path="/events/:eventId"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/news/:id"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/news-v2/:id"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          exact={true}
          path="/reports"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/about"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/about-registration"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/guidance"
        />
        <Route
          component={[Function]}
          exact={true}
          path="/guidance/metadata"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": [Function],
            }
          }
          exact={true}
          path="/sparql"
        />
        <Route
          render={[Function]}
        />
      </Switch>
    </withRouter(ScrollToTop)>
  </Switch>
  <Footer />
</div>
`;
